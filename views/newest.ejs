<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>ÊúÄÊñ∞-ÂÄºÂæó</title>
    <link rel="stylesheet" type="text/css" href="/static/css/bootstrap.min.css">
    <link rel="shortcut icon" href="/static/favicons/1.png">
    <link rel="stylesheet" href="/static/css/reset.css">
    <link rel="stylesheet" href="/static/css/index.css">
    <link rel="stylesheet" href="/static/css/animate.min.css">
    <link rel="stylesheet" href="/static/css/font-awesome.css">
    <link rel="stylesheet" href="/static/css/star-rating.css">
</head>

<body>
    <div class="vue">
        <input id="page_id" value="1" style="display:none">
        <header class="header" id="header" style="height:60px">
            <div class="header-top header-top__fixed">
                <%- include nav %>
            </div>
        </header>
        <%- include login %>
    </div>
    <div class="main">
        <div class="info_err animated flipInX" v-if="infos">{{infos}}</div>
        <div class="main-inner">
            <div class="main-list">
            </div>
            <div class="new_head">
                <div class="new_head_logo"><img src="/static/images/logo.png"><span class="new_head_text">ÊúÄÊñ∞</span></div>
            </div>
            <div class="main-waterfall" style="width:75%;float:left" v-if='zhide'>
                <div class="main-waterfall__wrapper">
                    <div @click="goZhide(item.objectId)" class="main-waterfall__row clearfix content_q" v-for="(item,index) in zhide">
                        <div class="waterfall-imgbox waterfall-box" style="height:184px!important">
                            <a class="img_a" href="#"><img :src="item.mainPic.url" style="height:auto" alt="#"></a>
                        </div>
                        <div class="waterfall-box content_zhi" style="height:182px;width:600px;overflow:hidden">
                            <div class="bai">
                                <input data-symbol="&#xe005;" data-default-caption="{rating} hearts" data-star-captions="{}" disabled="true" :value="HeartP(index)" type="number" class="rating" min=0 max=5 step=0.5 data-size="sm">
                            </div>
                            <div class="waterfall-info waterfall-info__top">
                                <h3 class="content_title">{{item.ZD_title}}</h3>
                                <p class="author">@{{item.belong.Nick}}<span class="content_time">{{item.Time}}</span></p>
                                <div class="content_text">{{item.ZD_summary}}</div>
                                <div class="content_info">
                                    <div class="content_info_1">Â∑≤Êúâ<span class="span_1">{{NumPing(index)}}</span>‰∫∫ÁªôÂá∫ÂÄºÂæóËØÑÂàÜ</div>
                                    <div class="content_bottom"><i class="icon-eye-open content_icon"></i>{{item.lookNum}}<i class="icon-comment content_icon"></i>{{NumPing(index)}}</div>
                                </div>
                                <!-- <div class="zhide_go">
                                    <div class="zhide_yes" @click='Zhide(item.objectId,index)'><i class="icon-heart icon_btn"></i>ÂÄºÂæó</div>
                                    <div class="zhide_no" @click='unZhide(item.objectId,index)'><i class="icon-heart-empty icon_btn"></i>‰∏çÂÄºÂæó</div>
                                </div> -->
                            </div>
                        </div>
                    </div>
                </div>
                <div v-if='lookmore' class="getMore-line" id="more" @click="LoadMore()">
                    <a>{{load}}</a>
                </div>
            </div>
            <div class="noLoad" style="width:75%;float:left" v-if="!zhide">
                <div class="spinner">
                    <div class="bounce1"></div>
                    <div class="bounce2"></div>
                    <div class="bounce3"></div>
                </div>
            </div>
            <div class="main_right">
                <div class="main-list__wrapper clearfix">
                    <div @click=goTheme(theme.objectId) class="left_new" v-for="(theme,index) in Theme"><img class="blur" :src="theme.mainPic.url" alt="#">
                        <div class="shot_text">{{theme.Theme_title}}</div>
                    </div>
                </div>
            </div>
            <div class="main-category clearfix">
            </div>
        </div>
    </div>
    <%- include footer %>
        <script src="/static/js/jquery.js"></script>
        <script src="/static/js/script_new.js"></script>
        <script src="/static/js/vue.min.js"></script>
        <script src="/static/js/vue_app.js"></script>
        <script src="/static/js/star-rating.js" type="text/javascript"></script>
        <script type="text/javascript">
        var main = new Vue({
            el: '.main',
            data: {
                zhideAll: '',
                zhide: '',
                infos: '',
                user: '',
                Theme: '',
                Time:'',
                num:10,
                lookmore:true,
                load:'Âä†ËΩΩÊõ¥Â§ö'
            },
            methods: {
                getStartZhide: function() {
                    
                    var _this = this;
                    $.ajax({
                        url: '/index/getZhide',
                        data: '',
                        method: 'POST',
                        success: function(data) {
                            if (data.state == 200) {
                                _this.zhide = data.zhide;
                                _this.Time = data.date;
                                //_this.zhide = data.zhide.slice(0, 5);
                                setTimeout(function() {
                                    var $input = $('input.rating'),
                                        count = Object.keys($input).length;
                                    if (count > 0) {
                                        $input.rating();
                                    }
                                }, 0);
                            } else {
                                alert('data.error');
                            }
                        }
                    })
                },
                LoadMore: function() {
                    if (this.load == 'Âä†ËΩΩ‰∏≠..') {
                      return false;
                    }
                    if (this.lookmore == false) {
                        return false
                    }
                    this.load = 'Âä†ËΩΩ‰∏≠..';
                    var _this = this;
                    $.ajax({
                        url: '/index/getZhideMore',
                        data: {
                            date:_this.Time,
                            num:_this.num,
                        },
                        method: 'POST',
                        success: function(data) {
                            if (data.state == 200) {
                                _this.num = _this.num + 10;
                                _this.load = 'Âä†ËΩΩÊõ¥Â§ö';
                                var arr = data.zhide;
                                if (arr.length <= 9) {
                                  _this.lookmore = false;
                                }
                                for (var i = 0; i < arr.length; i++) {
                                  _this.zhide.push(arr[i])
                                }
                                setTimeout(function() {
                                    var $input = $('input.rating'),
                                        count = Object.keys($input).length;
                                    if (count > 0) {
                                        $input.rating();
                                    }
                                }, 0);
                            } else {
                                alert(data.error);
                            }
                        }
                    })

                },
                HeartP: function(index) {
                    if (this.zhide[index].Rate) {
                        var arr = this.zhide[index].Rate;
                        var all = 0;
                        for (var i = 0; i < arr.length; i++) {
                            all = parseFloat(arr[i]) + all
                        }
                        var m = all / arr.length
                        return m;
                    } else {
                        return 0
                    }

                },
                Bai: function(e) {
                    var z = this.zhide[e].zhide;
                    var u = this.zhide[e].Unzhide;
                    if (z + u == 0) {
                        return '5'
                    } else {
                        return (z / (z + u)).toFixed(0)
                    }
                },
                NumPing: function(index) {
                    if (this.zhide[index].Rate) {
                        return this.zhide[index].Rate.length
                    } else {
                        return 0
                    }

                },
                Zhide: function(id, e) {
                    if (!this.user) {
                        this.infosOn('ËØ∑ÂÖàÁôªÂΩïÂì¶ÔºÅüòÑ');
                        return false;
                    }
                    var tag;
                    var _this = this;
                    var zhiarr = this.zhide[e].ZD_userArr;
                    for (var i = 0; i < zhiarr.length; i++) {
                        if (zhiarr[i] == this.user.objectId) {
                            _this.infosOn('Â∑≤ÁªèÂÄºÂæó‰∫Ü');
                            return false;
                        }
                    }
                    var unzhiarr = this.zhide[e].UZD_userArr;
                    for (var i = 0; i < unzhiarr.length; i++) {
                        if (unzhiarr[i] == this.user.objectId) {
                            tag = 1;
                            unzhiarr.splice(i, 1);
                            break;
                        }
                    }
                    this.zhide[e].ZD_userArr.push(this.user.objectId);
                    if (tag == 1) {
                        _this.zhide[e].zhide++;
                        _this.zhide[e].Unzhide--;
                    } else {
                        _this.zhide[e].zhide++;
                    }

                    $.ajax({
                        url: '/index/zhide',
                        data: {
                            id: id,
                            tag: tag,
                        },
                        method: 'POST',
                        success: function(data) {
                            if (data.state == 200) {

                            } else {
                                _this.infosOn('ËØ∑Á®çÂêéÂÜçËØï')
                            }
                        }
                    })
                },
                getThemeHot: function() {
                    var _this = this;
                    $.ajax({
                        url: '/index/getTheme',
                        type: "POST",
                        success: function(data) {
                            if (data.state == 200) {
                                _this.Theme = data.theme;
                            }
                        },
                    })
                },
                unZhide: function(id, e) {
                    if (!this.user) {
                        this.infosOn('ËØ∑ÂÖàÁôªÂΩïÂì¶ÔºÅüòÑ');
                        return false;
                    }
                    var _this = this;
                    var unzhiarr = this.zhide[e].UZD_userArr;
                    for (var i = 0; i < unzhiarr.length; i++) {
                        if (unzhiarr[i] == this.user.objectId) {
                            _this.infosOn('Â∑≤Áªè‰∏çÂÄºÂæóËøá‰∫Ü');
                            return false;
                        }
                    }
                    var zhiarr = this.zhide[e].ZD_userArr;
                    for (var i = 0; i < zhiarr.length; i++) {
                        if (zhiarr[i] == this.user.objectId) {
                            var tag = 2;
                            zhiarr.splice(i, 1);
                            break;
                        }
                    }
                    if (tag == 2) {
                        _this.zhide[e].zhide--;
                        _this.zhide[e].Unzhide++;
                    } else {
                        _this.zhide[e].Unzhide--;
                    }
                    this.zhide[e].UZD_userArr.push(this.user.objectId);

                    $.ajax({
                        url: '/index/unzhide',
                        data: {
                            id: id,
                            tag: tag,
                        },
                        method: 'POST',
                        success: function(data) {
                            if (data.state == 200) {

                            } else {
                                _this.infosOn('ËØ∑Á®çÂêéÂÜçËØï')
                            }
                        }
                    })
                },
                infosOn: function(e) {
                    var _this = this;
                    this.infos = e;
                    setTimeout(function() {
                        _this.infos = '';
                    }, 2000);
                },
                getUser: function() {
                    var _this = this;
                    $.ajax({
                        url: '/index/getUser',
                        type: "POST",
                        success: function(data) {
                            if (data.state == 200) {
                                _this.user = data.user;
                            }
                        },
                    })
                },
                goTheme: function(e) {

                    window.open('/index/Theme/' + e);
                },
                goZhide: function(e) {

                    window.open('/index/zhide/' + e);
                },
            },
            created() {
                var _this = this;
                this.getStartZhide();
                this.getUser();
                this.getThemeHot();
                


            }

        })
        </script>
        <script>
        jQuery(document).ready(function() {

            $(".rating-kv").rating();

        });
        </script>
</body>

</html>
